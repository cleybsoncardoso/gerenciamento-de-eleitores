/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.Controller;
import Model.Eleitores;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cleyb
 */
public class Aniversarios extends javax.swing.JPanel {

    private Logado logado;
    private int mes;
    private String mesString;
    private ArrayList<Eleitores> auxEleitores;
    private DefaultTableModel model;

    /**
     * Creates new form Aniversarios
     */
    public Aniversarios(Logado logado, String mes) {
        initComponents();
        this.logado = logado;
        this.logado.setTitle("Lista de aniversariantes");
        this.mesString=mes;
        this.mes = this.converteMes(mes);
        auxEleitores = new ArrayList<Eleitores>();
        this.selecionarUsers();
        model = (DefaultTableModel) jTable1.getModel();
        for (Eleitores atual : auxEleitores) {
            model.insertRow(model.getRowCount(), new Object[]{atual.getNome(), atual.getNascimento(), atual.getTelefone()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Nascimento", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Ordenar por Nome");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ordenar por Data");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Abrir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Aniversariantes do mÃªs");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 264, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(279, 279, 279)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Collections.sort(auxEleitores);
        this.add(auxEleitores);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        Eleitores[] ordenar = new Eleitores[auxEleitores.size()];

        for (int i = 0; i < auxEleitores.size(); i++) {
            ordenar[i] = auxEleitores.get(i);
        }

        for (int i = 0; i < ordenar.length; i++) {
            for (int j = 0; j < ordenar.length - 1; j++) {
                if (ordenar[j].getDia() > ordenar[j + 1].getDia()) {
                    Eleitores aux = ordenar[j];
                    ordenar[j] = ordenar[j + 1];
                    ordenar[j + 1] = aux;
                }
            }
        }

        auxEleitores = new ArrayList<Eleitores>();
        for (int i = 0; i < ordenar.length; i++) {
            auxEleitores.add(ordenar[i]);
        }
        this.add(auxEleitores);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.out.println(jTable1.getSelectedRow());
        this.logado.setContentPane(new AbrirEleitor(this.logado, auxEleitores.get(jTable1.getSelectedRow()),mesString));
        this.logado.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void add(ArrayList<Eleitores> aux) {
        for (int i = auxEleitores.size() - 1; i >= 0; i--) {

            model.removeRow(i);

        }
          for (Eleitores atual : aux) {
            model.insertRow(model.getRowCount(), new Object[]{atual.getNome(), atual.getNascimento(), atual.getTelefone()});
        }
      
    }

    private int converteMes(String mes) {
        if (mes.equals("Janeiro")) {
            return 1;
        } else if (mes.equals("Fevereiro")) {
            return 2;
        } else if (mes.equals("Marco")) {
            return 3;
        } else if (mes.equals("Abril")) {
            return 4;
        } else if (mes.equals("Maio")) {
            return 5;
        } else if (mes.equals("Junho")) {
            return 6;
        } else if (mes.equals("Julho")) {
            return 7;
        } else if (mes.equals("Agosto")) {
            return 8;
        } else if (mes.equals("Setembro")) {
            return 9;
        } else if (mes.equals("Outubro")) {
            return 10;
        } else if (mes.equals("Novembro")) {
            return 11;
        } else {
            return 12;
        }
    }

    private void selecionarUsers() {
        for (Eleitores atual : Controller.getInstance().getEleitores()) {
            if (atual.getMes() == mes) {
                auxEleitores.add(atual);
            }
        }
    }
}
